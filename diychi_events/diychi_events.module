<?php
/**
 * @file
 * Code for the DIYCHI Events feature.
 */

include_once('diychi_events.features.inc');

/**
* Implementation of hook_services_resources().
*/
function diychi_events_services_resources() {
  return array(
    'bands' => array(
      'index' => array(
        'help' => 'Retrieves a listing of bands',
        'file' => array('type' => 'inc', 'module' => 'diychi_events', 'name' => 'resources/bands_resource'),
        'callback' => '_bands_resource_index',
        'args' => array(
          array(
            'name' => 'page',
            'optional' => TRUE,
            'type' => 'int',
            'description' => 'The zero-based index of the page to get, defaults to 0.',
            'default value' => 0,
            'source' => array('param' => 'page'),
          ),
          array(
            'name' => 'fields',
            'optional' => TRUE,
            'type' => 'string',
            'description' => 'The fields to get.',
            'default value' => '*',
            'source' => array('param' => 'fields'),
          ),
          array(
            'name' => 'parameters',
            'optional' => TRUE,
            'type' => 'array',
            'description' => 'Parameters array',
            'default value' => array(),
            'source' => array('param' => 'parameters'),
          ),
          array(
            'name' => 'pagesize',
            'optional' => TRUE,
            'type' => 'init',
            'description' => 'Number of records to get per page.',
            'default value' => variable_get('services_node_index_page_size', 20),
            'source' => array('param' => 'pagesize'),
          ),
        ),
        'access arguments' => array('access content'),
      ),
    ),
  );
}

function diychi_events_token_info($type = 'all') {
	$data['tokens']['node']['event_month'] =  array(
		'name' => t('Event Month'),
		'description' => t('The event\'s month.'),
	);

	$data['tokens']['node']['event_year'] =  array(
		'name' => t('Event Year'),
		'description' => t('The event\'s year.'),
	);
	return $data;
}

function diychi_events_tokens($type, $tokens, array $data = array(), array $options = array()) {
	$replacements = array();

	if ($type == 'node' && !empty($data['node'])) {
		$node = $data['node'];
		$timestamp = strtotime($node->field_date['und'][0]['value']);
		

		foreach ($tokens as $name => $original) {
			switch ($name) {
				case 'event_month':
					$replacements[$original] = format_date($timestamp, 'custom', 'n');
					break;
				case 'event_year';
					$replacements[$original] = format_date($timestamp, 'custom', 'Y');
					break;
			}
		}
	}

	return $replacements;
}
